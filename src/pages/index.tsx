'use client';

import { signIn, signOut, useSession } from "next-auth/react";
import Head from "next/head";
import { api } from "~/utils/api";
import {
  createTRPCProxyClient,
  unstable_httpBatchStreamLink,
} from '@trpc/client';
import { AppRouter } from "~/server/api/root";
import SuperJSON from "superjson";
import useTRPC from '@trpc/client';

export const runtime = 'edge';
const transformer = (data: any): string => {
  if (typeof data === 'string') {
    return data;
  }

  return SuperJSON.stringify(data);
};

const client = createTRPCProxyClient<AppRouter>({
  links: [
    unstable_httpBatchStreamLink({
      url: 'http://localhost:3000',
    }),
  ],
  transformer: SuperJSON,
});

export default function Home() {
  const hello = api.example.hello.useQuery({ text: "low budget mental health tool." });
  const hello2 = api.example.fetchExternalData.useQuery({apiUrl: "https://api.anthropic.com/v1/complete"});

  return (
    <>
      <Head>
        <title>app</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className=" flex min-h-screen flex-col items-center justify-center bg-gradient-to-b from-[#E2FDFF] to-[#5465FF]">
        <AuthShowcase />
        
        <div className="container flex flex-col items-center justify-center gap-12 px-4 py-16 ">
          <h1 className="text-5xl font-extrabold tracking-tight text-white sm:text-[5rem]">
            DollarDiagnosis
          </h1>
          <div className="flex flex-col items-center gap-2">
            <p className="text-2xl text-white">
              {hello.data ? hello.data.greeting : "Loading tRPC query..."}
              
            </p>
            
          </div>
          {/* Button to fetch data */}
          <button
              className="rounded-full bg-white/10 px-10 py-3 font-semibold text-white no-underline transition hover:bg-white/20"
            >
              Fetch Your Results Now!
            </button>
            {hello2 ? JSON.stringify(hello2) : "Loading tRPC query..."}

            {/* Test Display API data */}
            
        </div>     

      </main>
      

      
    </>
    
  );
}



function AuthShowcase() {
  const { data: sessionData } = useSession();

  const { data: secretMessage } = api.example.getSecretMessage.useQuery(
    undefined, // no input
    { enabled: sessionData?.user !== undefined }
  );

  
  
  return (
    <div className="flex flex-col items-center justify-center gap-4">
      <p className="text-center text-2xl text-white">
        {secretMessage && <span> {secretMessage} </span>}
        <br/>
        {sessionData && <span>Logged in as {sessionData.user?.name}
            <div  className="rounded-lg">
              <textarea className="box-border h-200 w-200 p-4 
                  border-4 m4">
              </textarea>
              <br/>
              <button className="rounded-full bg-white/10 px-10 py-3 font-semibold text-white no-underline transition hover:bg-white/20">
                DIAGNOSE
              </button>
              
            </div>
          </span>
        }
      
      </p>      

      <button
        className="rounded-full bg-white/10 px-10 py-3 font-semibold text-white no-underline transition hover:bg-white/20"
        onClick={sessionData ? () => void signOut() : () => void signIn()}
      >
        <br></br>
        {sessionData ? "Sign out" : "Sign in"}
        <br></br>
        <br></br>
      </button>
      
      
    </div>
    
    
  );
}



