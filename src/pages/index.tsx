'use client';

import { signIn, signOut, useSession } from "next-auth/react";
import Head from "next/head";
import { api } from "~/utils/api";
import { useChat, useCompletion } from 'ai/react';
import { useEffect, useState } from "react";
export const runtime = 'experimental-edge';

export default function Home() {
  const hello = api.example.hello.useQuery({ text: "mental health assessment tool." });
  const complete = api.example.anthropicComplete.useQuery({prompt: "hEaiosjdaoisjfoiasjfoaisjfLLO"});


  return (
    <>

      <Head>
        <title>app</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className=" flex min-h-screen flex-col items-center justify-center bg-gradient-to-b from-[#E2FDFF] to-[#5465FF]">
        
        
        <div className="container flex flex-col items-center justify-center gap-12 px-4 py-16 ">
          <h1 className="text-5xl font-extrabold tracking-tight text-white sm:text-[5rem]">
            DollarDiagnosis
          </h1>
          <div className="flex flex-col items-center gap-2">
            <p className="text-2xl text-white">
              {hello.data ? hello.data.greeting : "Loading tRPC query..."}
              
              
            </p>
            
          </div>
        </div>   
        <AuthShowcase />
        
      </main>
    </>
  );


 
}



function AuthShowcase() {
  const { data: sessionData } = useSession();

  const { data: secretMessage } = api.example.getSecretMessage.useQuery(
    undefined, // no input
    { enabled: sessionData?.user !== undefined }
  );

  // WE RAN OUT OF TIME, ANTHROPIC UPDATED THEIR DOCS YESTERDAY AND BROKE EVERYTHING
  const textArray = [ ,
    <p>

    1
    Diagnosis: Generalized Anxiety Disorder (GAD)
    
    Diagnostic Criteria:
    
    Excessive anxiety and worry (apprehensive expectation) occurring most days for at least 6 months, over matters that are uncontrollable.
    The worry is excessive or disproportionate to the actual threat posed by the events or activities that are worried about.
    The worry is difficult to control.
    The worry and anxiety cause clinically significant distress or impairment in social, occupational, or other important areas of functioning.
    The worry is not attributable to the effects of a substance (e.g., a drug of abuse or a medication) or another medical condition (e.g., hyperthyroidism).
    Differential Diagnosis:
    
    Other anxiety disorders, such as social anxiety disorder, panic disorder, or specific phobia
    Substance-induced anxiety disorder
    Medical conditions that can cause anxiety symptoms, such as thyroid problems, heart disease, or caffeine withdrawal
    Prognosis:
    
    The prognosis for generalized anxiety disorder is generally good. Most people with this disorder can recover with treatment. However, some people may experience recurrent episodes of anxiety.
    
    Treatment:
    
    The most effective treatments for generalized anxiety disorder are psychotherapy and medication. Psychotherapy can help people to understand and manage their anxiety, and to develop coping skills. Medication can help to reduce anxiety and worry symptoms.
    
    Recommendations:
    
    I recommend that you begin individual psychotherapy with a qualified mental health professional.
    I also recommend that you see a psychiatrist to discuss whether medication may be helpful for you.
    In the meantime, there are some things you can do to help yourself manage your anxiety symptoms, such as:
    Getting regular exercise
    Eating a healthy diet
    Getting enough sleep
    Avoiding alcohol and drugs
    Practicing relaxation techniques, such as deep breathing or meditation
    Spending time with loved ones
    Doing activities that you enjoy
    If you are experiencing anxiety symptoms that are severe or interfering with your daily life, please reach out for help from a mental health professional.</p>];
  const [text, setText] = useState(textArray[0]);

  function generateRandomText() {
    const randomIndex = Math.floor(Math.random() * textArray.length);
    setText(textArray[randomIndex]);
  }

  
  return (
    <div className="flex flex-col items-center justify-center gap-4">
      <p className="text-center text-2xl text-white">
        {secretMessage && <span> {secretMessage} </span>}
        <br/>
        {sessionData && <span>Logged in as {sessionData.user?.name}
            
            <div  className="rounded-lg">
            <div>
              <textarea className="box-border h-200 w-200 p-4 
                  border-4 m4">
              </textarea>
              <br/>
              
              {/* <button className="rounded-full bg-white/10 px-10 py-3 font-semibold text-white no-underline transition hover:bg-white/20">
                DIAGNOSE
              </button> */}
              
                {/* <button
              
              className="rounded-full bg-white/10 px-10 py-3 font-semibold text-white no-underline transition hover:bg-white/20"
              >
              Fetch Your Results Now!
              </button>    */}
              
              <div>
                <h1>____</h1>
                
                <button className="rounded-full bg-white/10 px-10 py-3 font-semibold text-white no-underline transition hover:bg-white/20" onClick={generateRandomText}>Fetch Your Results Now!</button>
                <p>{text && <p>{text}</p>}</p>
              </div>
             </div>
            </div>
            
          </span>
          

        }
      
      </p>      

      <button
        className="rounded-full bg-white/10 px-10 py-3 font-semibold text-white no-underline transition hover:bg-white/20"
        onClick={sessionData ? () => void signOut() : () => void signIn()}
      >
        <br></br>
        {sessionData ? "Sign out" : "Sign in"}
        <br></br>
        <br></br>
        
      </button>
      
       
      
    </div>
    
    
  );
}
